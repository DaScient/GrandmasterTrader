# m‚ñ∂Ô∏è Usage
# bash

# Run the Flask server
python main.py

# Open your browser at http://localhost:5000.
# Click on any ticker row to load the interactive Plotly chart.

""" üóÇÔ∏è File Overview
#	‚Ä¢	main.py
# Flask app with two endpoints:
	‚Ä¢	/ ‚Üí serves the dashboard
	‚Ä¢	/api/signals ‚Üí JSON of live signals
	‚Ä¢	/api/history/<symbol> ‚Üí JSON of history + indicators + forecasts
	‚Ä¢	modules/utils.py
List of tracked assets.
	‚Ä¢	modules/indicators.py
Functions to compute RSI, AO, and golden-cross.
	‚Ä¢	modules/sentiment.py
Fetches and scores news headlines via RSS + VADER.
	‚Ä¢	modules/predictive.py
Monte Carlo simulation for future price percentiles.
	‚Ä¢	modules/data_fetch.py
Combines historical data, live feeds, indicators, sentiment, and forecasts into a single get_signals function and a get_history helper.
	‚Ä¢	templates/dashboard_v3.html
Front-end: HTML + Plotly chart + JS logic for drill-down interactivity.

üîÑ Extending & Contributing
	1.	Fork the repo
	2.	Create a feature branch (git checkout -b feature/my-feature)
	3.	Commit your changes (git commit -m "Add awesome feature")
	4.	Push to your branch (git push origin feature/my-feature)
	5.	Open a Pull Request

Please adhere to the existing code style and include tests where applicable.
"""

Made with ‚ù§Ô∏è by [Don D.M. Tadaya](https://linkedin.com/in/dontadaya) 
